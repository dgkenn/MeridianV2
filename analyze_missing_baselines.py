#!/usr/bin/env python3
"""
Analyze missing baseline warnings to identify which outcomes need baselines.
"""

# List of outcome tokens that showed "No baseline risk available" warnings
missing_outcomes = [
    "PROLONGED_ICU_LOS",
    "FAILED_NEURAXIAL",
    "HIGH_SPINAL",
    "MATERNAL_HYPOTENSION",
    "FETAL_DISTRESS",
    "UTERINE_ATONY",
    "POSTPARTUM_HEMORRHAGE",
    "PREECLAMPSIA_COMPLICATIONS",
    "AMNIOTIC_FLUID_EMBOLISM",
    "PEDIATRIC_AIRWAY_OBSTRUCTION",
    "POST_TONSILLECTOMY_BLEEDING",
    "PEDIATRIC_EMERGENCE_DELIRIUM",
    "POST_EXTUBATION_CROUP",
    "BLOCK_FAILURE",
    "REGIONAL_HEMATOMA",
    "REGIONAL_INFECTION",
    "REGIONAL_NERVE_DAMAGE",
    "PNEUMOTHORAX_REGIONAL",
    "PONV",
    "MORTALITY_INHOSPITAL",
    "SEIZURE",
    "AWARENESS_UNDER_ANESTHESIA",
    "EMERGENCE_AGITATION",
    "POSTOP_DELIRIUM",
    "POSTOP_COGNITIVE_DYSFUNCTION",
    "PERIPHERAL_NEUROPATHY",
    "SPINAL_HEMATOMA",
    "LOCAL_ANESTHETIC_TOXICITY",
    "SEVERE_ACUTE_PAIN",
    "DIFFICULT_PAIN_CONTROL",
    "CHRONIC_POSTSURGICAL_PAIN",
    "OPIOID_RESPIRATORY_DEPRESSION",
    "OPIOID_ILEUS",
    "OPIOID_PRURITUS",
    "OPIOID_URINARY_RETENTION",
    "NEW_PERSISTENT_OPIOID_USE",
    "SURGICAL_BLEEDING",
    "RETURN_TO_OR_BLEEDING",
    "BLOOD_TRANSFUSION",
    "COAGULOPATHY",
    "DISSEMINATED_INTRAVASCULAR_COAGULATION",
    "VENOUS_THROMBOEMBOLISM",
    "ACUTE_KIDNEY_INJURY",
    "DIALYSIS_INITIATION",
    "ACUTE_LIVER_INJURY",
    "POSTOP_ILEUS",
    "MESENTERIC_ISCHEMIA",
    "GI_BLEEDING",
    "SEPSIS",
    "MULTIPLE_ORGAN_DYSFUNCTION"
]

# Categorize by clinical domain
categories = {
    "ANESTHESIA_COMPLICATIONS": [
        "FAILED_NEURAXIAL", "HIGH_SPINAL", "AWARENESS_UNDER_ANESTHESIA",
        "EMERGENCE_AGITATION", "LOCAL_ANESTHETIC_TOXICITY"
    ],
    "REGIONAL_ANESTHESIA": [
        "BLOCK_FAILURE", "REGIONAL_HEMATOMA", "REGIONAL_INFECTION",
        "REGIONAL_NERVE_DAMAGE", "PNEUMOTHORAX_REGIONAL", "SPINAL_HEMATOMA"
    ],
    "POSTOPERATIVE_OUTCOMES": [
        "PONV", "POSTOP_DELIRIUM", "POSTOP_COGNITIVE_DYSFUNCTION",
        "POSTOP_ILEUS", "PROLONGED_ICU_LOS", "MORTALITY_INHOSPITAL"
    ],
    "PAIN_MANAGEMENT": [
        "SEVERE_ACUTE_PAIN", "DIFFICULT_PAIN_CONTROL", "CHRONIC_POSTSURGICAL_PAIN"
    ],
    "OPIOID_COMPLICATIONS": [
        "OPIOID_RESPIRATORY_DEPRESSION", "OPIOID_ILEUS", "OPIOID_PRURITUS",
        "OPIOID_URINARY_RETENTION", "NEW_PERSISTENT_OPIOID_USE"
    ],
    "SURGICAL_COMPLICATIONS": [
        "SURGICAL_BLEEDING", "RETURN_TO_OR_BLEEDING", "BLOOD_TRANSFUSION"
    ],
    "COAGULATION": [
        "COAGULOPATHY", "DISSEMINATED_INTRAVASCULAR_COAGULATION", "VENOUS_THROMBOEMBOLISM"
    ],
    "ORGAN_DYSFUNCTION": [
        "ACUTE_KIDNEY_INJURY", "DIALYSIS_INITIATION", "ACUTE_LIVER_INJURY",
        "SEPSIS", "MULTIPLE_ORGAN_DYSFUNCTION"
    ],
    "OBSTETRIC": [
        "MATERNAL_HYPOTENSION", "FETAL_DISTRESS", "UTERINE_ATONY",
        "POSTPARTUM_HEMORRHAGE", "PREECLAMPSIA_COMPLICATIONS", "AMNIOTIC_FLUID_EMBOLISM"
    ],
    "PEDIATRIC": [
        "PEDIATRIC_AIRWAY_OBSTRUCTION", "POST_TONSILLECTOMY_BLEEDING",
        "PEDIATRIC_EMERGENCE_DELIRIUM", "POST_EXTUBATION_CROUP"
    ],
    "NEUROLOGICAL": [
        "SEIZURE", "PERIPHERAL_NEUROPATHY"
    ],
    "GASTROINTESTINAL": [
        "MESENTERIC_ISCHEMIA", "GI_BLEEDING"
    ]
}

print("=== MISSING BASELINE ANALYSIS ===")
print(f"Total missing outcomes: {len(missing_outcomes)}")
print()

for category, outcomes in categories.items():
    print(f"{category} ({len(outcomes)} outcomes):")
    for outcome in outcomes:
        print(f"  - {outcome}")
    print()

# Priority outcomes (most common in practice)
priority_outcomes = [
    "PONV",  # Very common
    "MORTALITY_INHOSPITAL",  # Critical
    "POSTOP_DELIRIUM",  # Common in elderly
    "ACUTE_KIDNEY_INJURY",  # Common complication
    "SURGICAL_BLEEDING",  # Common surgical risk
    "BLOOD_TRANSFUSION",  # Important outcome
    "VENOUS_THROMBOEMBOLISM",  # Important complication
    "SEPSIS",  # Critical outcome
    "OPIOID_RESPIRATORY_DEPRESSION",  # Important safety
    "REGIONAL_HEMATOMA"  # Serious regional complication
]

print("=== PRIORITY OUTCOMES FOR IMMEDIATE BASELINE ADDITION ===")
for outcome in priority_outcomes:
    print(f"  - {outcome}")